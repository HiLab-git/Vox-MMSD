[dataset]
# tensor type (float or double)
tensor_type    = float
task_type      = seg
supervise_type = self_sup

# Set this value according to the path of dataset
train_dir = home/BraTS_GLI/data/preprocessed_data
valid_dir = home/BraTS_GLI/data/preprocessed_data
test_dir  = home/BraTS_GLI/data/preprocessed_data
train_csv = home/BraTS_GLI/data/selfsup_train.csv
valid_csv = home/BraTS_GLI/data/selfsup_train.csv
test_csv  = home/BraTS_GLI/data/selfsup_train.csv

train_batch_size = 2
num_worker       = 4
patch_size       = [96, 96, 96]
modal_num        = 4

train_transform = [GaussianNoise, GaussianBlur, BrightnessMultiplicative, BrightnessAdditive, Contrast, GammaCorrection]
valid_transform = None
test_transform  = None

GammaCorrection_channels  = [0,1,2,3]
GammaCorrection_gamma_min = 0.7
GammaCorrection_gamma_max = 1.5
GammaCorrection_probability = 0.8

GaussianNoise_channels = [0,1,2,3]
GaussianNoise_mean     = 0
GaussianNoise_std      = 0.05
GaussianNoise_probability = 1

GaussianBlur_channels = [0,1,2,3]
GaussianBlur_sigma_min     = 0.1
GaussianBlur_sigma_max     = 2
GaussianBlur_probability = 0.8
GaussianBlur_per_channel = True
GaussianBlur_per_channel_prob = 0.5

BrightnessMultiplicative_channels = [0,1,2,3]
BrightnessMultiplicative_sigma_min     = 0.75
BrightnessMultiplicative_sigma_max     = 1.25
BrightnessMultiplicative_probability = 0.85
BrightnessMultiplicative_per_channel = False

BrightnessAdditive_channels = [0,1,2,3]
BrightnessAdditive_sigma_min     = 0
BrightnessAdditive_sigma_max     = 0.4
BrightnessAdditive_probability = 0.5
BrightnessAdditive_per_channel = True
BrightnessAdditive_per_channel_prob = 0.8

Masked_ratio = 0.875
Masked_size  = 16
Masked_prob  = 1
Masked_method = zero

[network]
# type of network
net_type = UNet3D_voxmmsd

# number of class, required for segmentation task
class_num     = 4
in_chns       = 4
feature_chns  = [32, 64, 128, 256, 512]
dropout       = [0, 0, 0.2, 0.2, 0.2]
up_mode       = 2
same_pred = False

[self_supervised_learning]
method_name = VoxMMSD
max_num_voxels = 1024
loss_temp = 0.1
loss_lambda = 1

out_dim = 512
use_bn_in_head = False
local_crops_number = 0
warmup_teacher_temp = 0.04
teacher_temp = 0.07
warmup_teacher_temp_epochs = 20
momentum_teacher = 0.996

[training]
# list of gpus
gpus       = [0]

loss_type     = MAELoss
loss_acti_func  = tanh

# for optimizers
optimizer     = SGD
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular
lr_scheduler  = CosineAnnealingLR
ckpt_save_dir       = pretrain_model/unet3d_VoxMMSD

iter_max   = 60000
iter_valid = 200
iter_save  = 30000

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = pretrain_result/unet3d_VoxMMSD
post_process      = None
sliding_window_enable = False